# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD with Maven

on:
  push:
    branches: [ "main" ]
    paths:
      - 'pom.xml'
#  pull_request:
#    branches: [ "main" ]
#    paths:
#      - 'pom.xml'

jobs:
  build:

    runs-on: ubuntu-latest
    
    outputs:
      VERSION: ${{ env.VERSION }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: maven
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml
        
    - name: Set version
      id: set_version
      run: |
        version="$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)"
        echo "VERSION=$version" >> $GITHUB_ENV
        
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with:
        name: "swing-boot-${{ env.VERSION }}"
        path: "target/swing-boot-${{ env.VERSION }}.jar"
        
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
  release:
  
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Get version
      id: get_version
      run: |
        echo "VERSION=${{ needs.build.outputs.VERSION }}" >> $GITHUB_ENV
      
    - name: Download Jar Artifact
      uses: actions/download-artifact@v3
      with:
        name: "swing-boot-${{ env.VERSION }}"
        
    - name: Upload Jar to Release
      id: upload-jar-to-release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: "${{ env.VERSION }}"
        name: "${{ env.VERSION }}"
        body: |
            ${{ github.event.pull_request.body }}
            ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
        artifacts: "${{ github.workspace }}/swing-boot-${{ env.VERSION }}.jar"
        artifactContentType: application/java-archive

#  deploy:
#
#    needs: [build, release]
#    runs-on: ubuntu-latest
#    environment: production
#
#    steps:
#    - name: Get version
#      id: get_version
#      run: |
#        echo "VERSION=${{ needs.build.outputs.VERSION }}" >> $GITHUB_ENV
#
#    - name: Deploy Jar to Server
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.SERVER_HOST }}
#        username: ${{ secrets.SERVER_USERNAME }}
#        key: ${{ secrets.SERVER_PRIVATE_KEY }}
#        script: |
#          cd /home/github/ben-ai-java
#          rm swing-boot-*.jar
#          wget https://github.com/${{ github.repository }}/releases/download/${{ env.VERSION }}/swing-boot-${{ env.VERSION }}.jar
#          screen -S ben-ai-java -X quit
#          screen -dmS ben-ai-java java -jar swing-boot-${{ env.VERSION }}.jar
    #--server.port=8080
